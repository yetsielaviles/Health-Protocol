
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ADDDOCTOR ADDPATIENT ASSIGN AVAILABILITY AVAILABLE BEDS BIRTHDAY CHARACTER COLON COMMA CREATE DIGIT DOCTORS ID INFO LP NAME OPERATOR PROTOCOLS RP SERVICES SSN UPDATEexpression : CREATE name COLONexpression : PROTOCOLS COLONexpression : BEDS LP DIGIT RP COLONexpression : BEDS COLONexpression : DOCTORS LP AVAILABLE RP COLONexpression : DOCTORS COLONexpression : SERVICES COLONexpression : INFO LP ID RP COLONexpression : UPDATE LP ID COMMA AVAILABILITY RPexpression : LP name COMMA birthday COMMA ssn COMMA availability COMMA id RP COLONexpression : LP name COMMA birthday COMMA ssn COMMA name COMMA id RP COLONid : IDname : NAMEssn : SSNbirthday : BIRTHDAYavailability : AVAILABILITY'
    
_lr_action_items = {'CREATE':([0,],[2,]),'PROTOCOLS':([0,],[3,]),'BEDS':([0,],[4,]),'DOCTORS':([0,],[6,]),'SERVICES':([0,],[7,]),'INFO':([0,],[8,]),'UPDATE':([0,],[9,]),'LP':([0,4,6,8,9,],[5,13,16,19,20,]),'$end':([1,12,14,17,18,21,33,35,36,40,52,53,],[0,-2,-4,-6,-7,-1,-3,-5,-8,-9,-11,-10,]),'NAME':([2,5,41,],[11,11,11,]),'COLON':([3,4,6,7,10,11,27,30,31,50,51,],[12,14,17,18,21,-13,33,35,36,52,53,]),'COMMA':([11,15,26,28,29,38,39,42,43,44,],[-13,23,32,34,-15,41,-14,45,46,-16,]),'DIGIT':([13,],[22,]),'AVAILABLE':([16,],[24,]),'ID':([19,20,45,46,],[25,26,48,48,]),'RP':([22,24,25,37,47,48,49,],[27,30,31,40,50,-12,51,]),'BIRTHDAY':([23,],[29,]),'AVAILABILITY':([32,41,],[37,44,]),'SSN':([34,],[39,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'expression':([0,],[1,]),'name':([2,5,41,],[10,15,42,]),'birthday':([23,],[28,]),'ssn':([34,],[38,]),'availability':([41,],[43,]),'id':([45,46,],[47,49,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> expression","S'",1,None,None,None),
  ('expression -> CREATE name COLON','expression',3,'p_expression_create','parser.py',21),
  ('expression -> PROTOCOLS COLON','expression',2,'p_expression_protocols','parser.py',24),
  ('expression -> BEDS LP DIGIT RP COLON','expression',5,'p_expression_bed','parser.py',27),
  ('expression -> BEDS COLON','expression',2,'p_beds','parser.py',30),
  ('expression -> DOCTORS LP AVAILABLE RP COLON','expression',5,'p_available_doctors','parser.py',33),
  ('expression -> DOCTORS COLON','expression',2,'p_expression_doctors','parser.py',36),
  ('expression -> SERVICES COLON','expression',2,'p_expression_services','parser.py',39),
  ('expression -> INFO LP ID RP COLON','expression',5,'p_expression_info','parser.py',42),
  ('expression -> UPDATE LP ID COMMA AVAILABILITY RP','expression',6,'p_expression_update','parser.py',45),
  ('expression -> LP name COMMA birthday COMMA ssn COMMA availability COMMA id RP COLON','expression',12,'p_addDoctor','parser.py',48),
  ('expression -> LP name COMMA birthday COMMA ssn COMMA name COMMA id RP COLON','expression',12,'p_addPatient','parser.py',51),
  ('id -> ID','id',1,'p_id','parser.py',54),
  ('name -> NAME','name',1,'p_name','parser.py',57),
  ('ssn -> SSN','ssn',1,'p_ssn','parser.py',60),
  ('birthday -> BIRTHDAY','birthday',1,'p_birthday','parser.py',63),
  ('availability -> AVAILABILITY','availability',1,'p_availability','parser.py',66),
]
